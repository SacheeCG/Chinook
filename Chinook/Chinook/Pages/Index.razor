@page "/"
@attribute [Authorize]
@inject IArtistService ArtistService

@using Chinook.ClientModels;
@using Chinook.Services;
@using Microsoft.EntityFrameworkCore

<PageTitle>Index</PageTitle>

   
<h1>Artists</h1>

@if (filteredArtists == null)
{
    <Loading />
}
else
{
    <input @bind="searchTerm" placeholder="Search by artist name" />
    <button @onclick="Search">Search</button>
    <table class="table table-striped table-hover table-sm">
        <thead>
            <tr>
                <th>Name</th>
                <th>Number of albums</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var artist in filteredArtists)
            {
                <tr>
                    <td><a href="Artist/@artist.ArtistId">@artist.Name</a></td>
                    <td>@artist.Albums.Count()</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    private List<Artist> filteredArtists;
    private string searchTerm;

    protected override async Task OnInitializedAsync() {
        await InvokeAsync(StateHasChanged);
        var Artists = await ArtistService.GetArtists();
        filteredArtists = ModelMapper.MapArtistsToViewModel(Artists);
    }

    private void Search()
    {
        if (!string.IsNullOrWhiteSpace(searchTerm))
        {
            filteredArtists = filteredArtists.Where(artist => artist.Name.ToLower().Contains(searchTerm.ToLower())).ToList();
        }
        else
        {
            OnInitializedAsync();
        }
    }   
}
